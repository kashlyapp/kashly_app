name: CI
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"

      - name: Flutter version
        run: flutter --version

      - name: Pub get
        run: flutter pub get

      - name: Analyze
        run: flutter analyze

      # IMPORTANT: instalÂ·lar lcov ABANS de llegir coverage
      - name: Install lcov
        run: sudo apt-get update && sudo apt-get install -y lcov

      - name: Test with coverage
        run: flutter test --coverage

      - name: Filter coverage to lib
        run: |
          set -e
          LCOV="coverage/lcov.info"
          PROJ="$(pwd)"
          if [ ! -f "$LCOV" ]; then
            echo "ERROR: $LCOV not found"; exit 1
          fi
          # Inclou tot lib/**
          lcov --extract "$LCOV" "$PROJ/lib/*" "$PROJ/lib/**" -o "$LCOV" || true
          # Exclou generats i firebase_options.dart
          lcov --remove "$LCOV" "$PROJ/lib/**.g.dart" "$PROJ/lib/firebase_options.dart" -o "$LCOV" || true
          echo "Filtered summary:" && lcov --summary "$LCOV"

      - name: Enforce coverage >= 70%
        run: |
          set -e
          LCOV="coverage/lcov.info"
          if [ ! -f "$LCOV" ]; then
            echo "Line coverage: 0%"; exit 1
          fi
          PCT=$(lcov --summary "$LCOV" 2>/dev/null | awk '/lines/ {print $2}' | tr -d '%')
          echo "Line coverage: ${PCT}%"
          THRESHOLD=70
          if [ -z "$PCT" ]; then echo "Could not parse coverage"; exit 1; fi
          python - <<'PY'
import sys, os
pct = float(os.environ.get("PCT","0"))
thr = float(os.environ.get("THRESHOLD","70"))
sys.exit(0 if pct >= thr else 1)
PY
